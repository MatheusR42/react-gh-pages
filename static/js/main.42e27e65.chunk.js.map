{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","useState","isOpen","setIsOpen","className","onClick","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8IAAAA,EAAOC,QAAU,IAA0B,kC,4FC4E5BC,MAxEf,WAAgB,IAAD,EACeC,oBAAS,GADxB,mBACNC,EADM,KACEC,EADF,KAGb,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,uBACEA,UAAU,WACVC,QAAS,kBAAMF,GAAWD,IAC1BI,IAAI,uBAHN,eAOCJ,GACC,oCACE,ubASA,4ZAQA,oiBAWA,wfAUA,4nBC7CQK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.42e27e65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\n// import \"./App.css\";\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <a\n          className=\"App-link\"\n          onClick={() => setIsOpen(!isOpen)}\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        {isOpen && (\n          <>\n            <p>\n              Inceptos sit aenean ac mi mauris justo praesent curae;? Fusce\n              praesent ante lobortis eleifend consectetur. Metus class elit\n              conubia cum. Pellentesque tempor donec ante libero eget netus\n              semper. Vulputate litora turpis leo ullamcorper placerat laoreet\n              hendrerit torquent dapibus bibendum mollis. Arcu gravida\n              ullamcorper interdum egestas volutpat. Auctor, inceptos rhoncus\n              dignissim felis vitae. Sollicitudin.\n            </p>\n            <p>\n              Dolor molestie elit parturient nunc libero ligula sed sapien\n              fermentum tempus lacus! Semper auctor montes integer curae; magna.\n              Ullamcorper a nibh, himenaeos dictum aliquam nibh arcu id suscipit\n              habitant potenti. Lacus nibh vestibulum lacus duis tincidunt dolor\n              nostra dignissim. Euismod mollis lacinia ultricies phasellus,\n              accumsan vestibulum magnis gravida. Libero morbi feugiat!\n            </p>\n            <p>\n              Posuere penatibus commodo orci taciti sodales platea purus gravida\n              placerat cubilia erat. Porta urna mi facilisi ipsum turpis netus\n              quam eu. Ultrices rhoncus tristique eleifend urna tincidunt\n              bibendum hac ad aptent ultricies purus ornare! Per tortor, quis\n              ultrices risus cras quisque litora interdum. Sit non litora\n              nascetur augue platea sem morbi iaculis conubia duis phasellus.\n              Sapien malesuada montes curabitur, gravida odio volutpat. Lorem\n              nam eu mattis. Pellentesque ipsum malesuada porta tempor ac\n              cubilia odio.\n            </p>\n            <p>\n              Amet magnis congue diam auctor maecenas vitae etiam senectus\n              commodo dictum, netus laoreet? Lorem magna cubilia hendrerit\n              interdum, inceptos donec integer dictumst ut convallis. Vehicula\n              adipiscing platea ac odio eleifend adipiscing mi hendrerit nisl\n              ullamcorper porta proin. Fringilla magna integer, leo tellus\n              vivamus convallis donec. Dapibus pulvinar fusce parturient\n              inceptos consectetur cursus dictum. Malesuada, integer dictum ad\n              duis dui dapibus etiam. Pellentesque.\n            </p>\n            <p>\n              Aliquam porttitor leo dis dapibus placerat hendrerit dictumst\n              magnis primis! Augue nunc tortor primis fames. Velit libero\n              consequat ad iaculis habitant? Pulvinar, sociis sem etiam non\n              inceptos odio purus nam mus euismod. Gravida aenean platea congue\n              dis in lacinia. Augue orci consectetur accumsan interdum eget\n              malesuada sit ridiculus lacus nullam? Curae; malesuada blandit\n              commodo imperdiet senectus adipiscing adipiscing. Vivamus leo\n              morbi diam. Congue rhoncus porttitor eu arcu ornare egestas in\n              blandit amet. Elit etiam facilisi conubia etiam congue. Lacinia mi\n              ante sed, porttitor proin. Mattis.\n            </p>\n          </>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}